from contextlib import contextmanager
from subprocess import call
import tempfile
import os


@contextmanager
def c_compile(code, flags=None, delete=True):
    """
    Context manager that compiles C-code with the provided flags and yields
    the output filename. Once control is returned to this context manager,
    the file will be deleted, unless the `delete` parameter says otherwise.
    """
    if flags is None:
        flags = ['-fno-stack-protector', '-m32']

    # Write code to file
    f = tempfile.NamedTemporaryFile(delete=False, suffix='.c')
    f.write(code)
    f.close()

    # Compile
    out = f.name.replace('.c', '.out')
    print call(['gcc', f.name, '-o', out] + flags)

    yield out

    # Clean up
    os.unlink(f.name)
    if delete:
        os.unlink(out)
